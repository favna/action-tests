name: testing

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  preci:
    runs-on: ubuntu-latest
    steps:

    # We need to fetch more than one commit to be able to access HEAD^2 in case
    # of a pull request
    - uses: actions/checkout@v2
      with:
        fetch-depth: 3

    # In case of a push event, the commit we care about is simply HEAD.
    # The current branch name can be found by parsing GITHUB_REF, for example,
    # if we are on the master branch, then GITHUB_REF = refs/heads/master.
    - name: '[Push Event] Get commit branch and commit message'
      if: github.event_name == 'push'
      run: |
        echo "COMMIT_BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # In case of a pull_request event, the commit we care about is HEAD^2, that
    # is, the second parent of the pull request merge commit.
    # The current branch name is directly given by GITHUB_HEAD_REF
    - name: '[Pull Request Event] Get commit branch and commit message'
      if: github.event_name == 'pull_request'
      run: |
        echo "COMMIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD^2)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

  test:
    name: Testing GitHub Actions
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: preci
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Get GitHub Branch Name
        run: echo "GITHUB_BRANCH_NAME=$(echo ${{ github.ref }} | cut -c12- | sed -e 's/\/\|_/-/g' | sed -e 's/@//g')" >> $GITHUB_ENV
      - name: Log stored git Branch
        run: echo $BRANCH_NAME
        env:
          BRANCH_NAME: '${{ env.GITHUB_BRANCH_NAME }}'
      - name: Log commit message
        run: echo $COMMIT_MESSAGE
        env:
          COMMIT_MESSAGE: '${{ env.COMMIT_MESSAGE }}'
      - name: Log commit branch
        run: echo $COMMIT_BRANCH
        env:
          COMMIT_BRANCH: '${{ env.COMMIT_BRANCH }}'

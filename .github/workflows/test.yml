name: Auto Rename Crowdin PRs

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: The number of the PR that is being deployed
        required: true
      ref:
        description: The branch that is being deployed. Should be a branch on the given repository
        required: false
        default: main
      repository:
        description: The {owner}/{repository} that is being deployed.
        required: false
        default: Favna/action-tests
  push:
  pull_request:

jobs:
  rename_crowdin_prs:
    name: Rename PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # repository: ${{ github.event.inputs.repository || 'Favna/action-tests' }}
          # ref: ${{ github.event.inputs.ref || 'main' }}
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump Job context
        env:
          GITHUB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump Node Version
        run: node --version
      - name: Install GitHub CLI
        run: |
          curl -sL \
              $(curl -sL \
                  -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
                  -X POST \
                  --data '{"query":"query { repository(owner: \"cli\", name: \"cli\") { releases(last: 1) { nodes { releaseAssets(first: 20) { nodes { downloadUrl name }}}}}}"}' "https://api.github.com/graphql" |
                  jq -cr '.data.repository.releases.nodes[0].releaseAssets.nodes[]? | select(.name | contains("linux_amd64.tar.gz")).downloadUrl') |
              tar -xz --wildcards "*gh" && mv gh*linux_amd64/bin/gh . && rm -r gh_*linux_amd64
      - name: Do something
        run: |
          # Resolve the tag to be used. "next" for push events, "pr-{prNumber}" for dispatch events.
          TAG=$([[ ${{ github.event_name }} == 'push' ]] && echo 'next' || echo 'pr-${{ github.event.inputs.prNumber }}')
          BRANCH=$(echo '${{ github.event.inputs.ref || 'main' }}')

          # Bump and publish
          echo ${TAG}
          echo ${BRANCH}
